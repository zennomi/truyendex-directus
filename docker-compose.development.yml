version: "3"
services:
  directus:
    image: directus/directus:11.3.5
    env_file:
      - .env
    ports:
      - 8055:8055
    volumes:
      - ./uploads:/directus/uploads
      - ./extensions:/directus/extensions
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    environment:
      SECRET: "${SECRET}"

      DB_CLIENT: "pg"
      DB_HOST: "${DB_HOST}"
      DB_PORT: 5432
      DB_DATABASE: "${DB_DATABASE}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"

      CACHE_ENABLED: "true"
      CACHE_AUTO_PURGE: "true"
      CACHE_STORE: "redis"
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"

      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"

      CONTENT_SECURITY_POLICY_DIRECTIVES__IMG_SRC: "* 'self' data: blob:"
  database:
    image: postgres:latest
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ./data/database:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "--host=localhost", "--username=${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s

  cache:
    image: redis:latest
    env_file:
      - .env
    command: [ "redis-server", "--port", "${REDIS_PORT}", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - "./data/cache/redis:/data"
    healthcheck:
      test: [ "CMD-SHELL", "if [ $(redis-cli -p ${REDIS_PORT} -a ${REDIS_PASSWORD} ping) = 'PONG' ]; then exit 0; else exit 1; fi" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_interval: 5s
      start_period: 30s
